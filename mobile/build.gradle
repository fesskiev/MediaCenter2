apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.fesskiev.mediacenter"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCodeApp
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
androidExtensions {
    experimental = true
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/jaudiotagger-2.2.4.jar')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile group: "commons-io", name: "commons-io", version: "$commons"
    compile project(':ffmpegengine')
    compile project(':superpoweredengine')

    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:cardview-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:support-v4:$supportLibVersion"
    compile "com.android.support:palette-v7:$supportLibVersion"

    compile "android.arch.persistence.room:runtime:$archComponents"
    compile "android.arch.persistence.room:rxjava2:$archComponents"
    annotationProcessor "android.arch.persistence.room:compiler:$archComponents"
    kapt "android.arch.persistence.room:compiler:$archComponents"

    compile "com.squareup.retrofit2:retrofit:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$gson"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rxjavaAdapter"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"

    compile "io.reactivex.rxjava2:rxandroid:$rxandroid"
    compile "io.reactivex.rxjava2:rxjava:$rxjava"

    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanary"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"

    testImplementation "org.robolectric:robolectric:$robolectric"

    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-all:$mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$powerMockito"

    androidTestCompile "com.android.support.test:runner:$runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rulesVersion"

    wearApp project(':wear')
    implementation "com.google.android.gms:play-services-wearable:$playServices"
}
